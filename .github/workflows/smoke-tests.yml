name: smoke-tests

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  smoke:
    name: Run infrastructure smoke tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python tooling
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/python/ci.txt

      - name: Prepare environment file
        run: cp .env.example .env

      - name: Ensure evidence and volume directories exist
        run: |
          mkdir -p models docs/evidence

      - name: Run Python smoke tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Run Pester tests
        shell: pwsh
        run: |
          Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck
          Invoke-Pester -Script tests/pester -Output Detailed

      - name: Bring up compose stack (CPU override)
        run: docker compose -f infra/compose/docker-compose.yml -f infra/compose/docker-compose.ci.yml up -d

      - name: Probe service health
        run: |
          echo "Waiting for services to initialise"
          python scripts/wait_for_http.py --retries 36 --delay 5 --timeout 5 \
            http://localhost:11434/api/version

      - name: Run context sweep (safe CPU profile)
        shell: pwsh
        run: ./scripts/context-sweep.ps1 -Safe -CpuOnly -Profile baseline-cpu -PlanOnly -WriteReport
      - name: Capture host state snapshot
        shell: pwsh
        run: ./scripts/clean/capture_state.ps1 -OutputRoot docs/evidence/ci

      - name: Dump compose logs on failure
        if: failure()
        run: docker compose -f infra/compose/docker-compose.yml -f infra/compose/docker-compose.ci.yml logs

      - name: Tear down compose stack
        if: always()
        run: docker compose -f infra/compose/docker-compose.yml -f infra/compose/docker-compose.ci.yml down -v

      - name: Assert .env matches template
        run: diff <(grep -v '^#' .env.example | sort) <(grep -v '^#' .env | sort)

  validate-stack:
    name: Validate compose stack
    runs-on: ubuntu-latest
    needs: smoke
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Run stack validation script
        run: ./scripts/validate-stack.sh
